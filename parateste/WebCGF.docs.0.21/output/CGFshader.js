Ext.data.JsonP.CGFshader({"tagname":"class","name":"CGFshader","autodetected":{},"files":[{"filename":"CGFshader.js","href":null}],"members":[{"name":"attributes","tagname":"property","owner":"CGFshader","id":"property-attributes","meta":{}},{"name":"uniforms","tagname":"property","owner":"CGFshader","id":"property-uniforms","meta":{}},{"name":"CGFshader","tagname":"method","owner":"CGFshader","id":"method-CGFshader","meta":{}},{"name":"getUniformValue","tagname":"method","owner":"CGFshader","id":"method-getUniformValue","meta":{}},{"name":"getUniformsValues","tagname":"method","owner":"CGFshader","id":"method-getUniformsValues","meta":{}},{"name":"importUniforms","tagname":"method","owner":"CGFshader","id":"method-importUniforms","meta":{}},{"name":"setUniformsValues","tagname":"method","owner":"CGFshader","id":"method-setUniformsValues","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-CGFshader","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-attributes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-property-attributes' class='name expandable'>attributes</a> : *<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-uniforms' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-property-uniforms' class='name expandable'>uniforms</a> : *<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-CGFshader' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-method-CGFshader' class='name expandable'>CGFshader</a>( <span class='pre'>gl, vertexURL, fragmentURL</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>gl</span> : WebGLRenderingContext<div class='sub-desc'>\n</div></li><li><span class='pre'>vertexURL</span> : string<div class='sub-desc'>\n</div></li><li><span class='pre'>fragmentURL</span> : string<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUniformValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-method-getUniformValue' class='name expandable'>getUniformValue</a>( <span class='pre'>uniformName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of a given uniform. ...</div><div class='long'><p>Returns the value of a given uniform.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uniformName</span> : string<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUniformsValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-method-getUniformsValues' class='name expandable'>getUniformsValues</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the uniforms' values as a dictionary with a common structure ...</div><div class='long'><p>Returns the uniforms' values as a dictionary with a common structure</p>\n</div></div></div><div id='method-importUniforms' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-method-importUniforms' class='name expandable'>importUniforms</a>( <span class='pre'>srcShader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copies uniforms' values from another shader (only those that are common) ...</div><div class='long'><p>Copies uniforms' values from another shader (only those that are common)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>srcShader</span> : <a href=\"#!/api/CGFshader\" rel=\"CGFshader\" class=\"docClass\">CGFshader</a><div class='sub-desc'><p>The shader from which to copy values</p>\n</div></li></ul></div></div></div><div id='method-setUniformsValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CGFshader'>CGFshader</span><br/></div><a href='#!/api/CGFshader-method-setUniformsValues' class='name expandable'>setUniformsValues</a>( <span class='pre'>dict</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets uniforms' values from a dictionary with a common structure ...</div><div class='long'><p>Sets uniforms' values from a dictionary with a common structure</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dict</span> : dict<div class='sub-desc'><p>The dictionary from which to copy values</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});