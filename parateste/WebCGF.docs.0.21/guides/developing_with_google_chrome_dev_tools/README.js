Ext.data.JsonP.developing_with_google_chrome_dev_tools({"guide":"<h1 id='developing_with_google_chrome_dev_tools-section-developing-with-google-chrome-developer-tools'>Developing with Google Chrome Developer Tools</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/developing_with_google_chrome_dev_tools-section-mapping-network-resources'>Mapping network resources</a>\n </li>\n<li>2. <a href='#!/guide/developing_with_google_chrome_dev_tools-section-disabling-cache'>Disabling cache</a>\n </li>\n<li>3. <a href='#!/guide/developing_with_google_chrome_dev_tools-section-additional-debugging-tools'>Additional Debugging Tools</a>\n </li>\n</ul></div>\n\n<p>Now the setup is complete, you can start playing around and write some code!</p>\n\n<p>You should make use of <strong>Google Chrome Developer Tools</strong> during the course, it is everything you need to develop <em>WebGL</em> applications.</p>\n\n<h2 id='developing_with_google_chrome_dev_tools-section-mapping-network-resources'>Mapping network resources</h2>\n\n<p>If you already tried to edit any code using the <em>Developer Tools</em>, you may have noticed that your changes do not persist. Even if you <em>save</em> those changes, they will <em>reset</em> once you refresh the application. That is because the files you are trying to edit are the ones being run in the mongoose server, <strong>not the ones on your local drive</strong>.</p>\n\n<p>However, you can <strong>map</strong> each of the mongoose server <em>network resources</em> to the corresponding local file you are trying to edit. That way, you will be able to <em>directly</em> <strong>modify</strong> and <strong>write</strong> code within <em>Google Chrome Developer Tools</em>. The following video shows how to do it.</p>\n\n<p><p><iframe src=\"http://player.vimeo.com/video/121398533\" width=\"640\" height=\"360\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></p></p>\n\n<h2 id='developing_with_google_chrome_dev_tools-section-disabling-cache'>Disabling cache</h2>\n\n<p>It is <em>advised</em> to disable cache while using <em>DevTools</em>. If you do not disable it, some syncing issues may arise when you edit source files.</p>\n\n<ol>\n<li><p>Open <em>Google Chrome Developer Tools</em> <strong>Settings</strong>.</p>\n\n<p> <p><img src=\"guides/developing_with_google_chrome_dev_tools/res/1-open-dev-tools-settings.png\" alt=\"\" style=\"max-width:100%; max-height:100%; border: solid #D9E8FB 1px;\"></p></p></li>\n<li><p>Make sure to check the <strong>Disable cache (while DevTools is open)</strong> option.</p>\n\n<p> <p><img src=\"guides/developing_with_google_chrome_dev_tools/res/2-disable-cache.png\" alt=\"\" style=\"max-width:100%; max-height:100%; border: solid #D9E8FB 1px;\"></p></p></li>\n</ol>\n\n\n<h2 id='developing_with_google_chrome_dev_tools-section-additional-debugging-tools'>Additional Debugging Tools</h2>\n\n<p>There are useful tools for debugging WebGL in Chrome. One of them is the <a href=\"https://chrome.google.com/webstore/detail/webgl-inspector/ogkcjmbhnfmlnielkjhedpcjomeaghda?hl=en\">WebGL Inspector Chrome extension</a>, which allows you to capture and analyse the WebGL calls, shaders and textures used when rendering a frame.</p>\n","title":"Developing with Google Chrome Developer Tools"});